<%- include('../layouts/header') %>
<%- include('../layouts/navbar') %>


<style>
    .product_count {
    display: flex;
    align-items: center;
    justify-content: center;
}

.increment-btn, .decrement-btn {
    cursor: pointer;
    padding: 5px;
    border: 1px solid #ffffff;
    background-color: #ffffff;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.increment-btn:hover, .decrement-btn:hover {
    background-color: #ffffff;
}

.readonly-input {
    width: 50px;
    text-align: center;
    margin: 0 5px;
    border: 1px solid #ced4da;
    background-color: #f8f9fa;
    pointer-events: none;
}

.table-cart th, .table-cart td {
    vertical-align: middle;
}

.up-arrow {
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 10px solid black; 
}

.down-arrow {
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 10px solid black; 
}
</style>
<main class="main">
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title">Shopping Cart<span>Shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/product">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">Shopping Cart</li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="cart">
            <div class="container">
                <div class="row">
                    <div class="col-lg-9">
                        <table class="table table-cart table-mobile">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th></th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>
                                <% if(cartData && cartData.length > 0) { %>
                                    <% cartData.forEach(product => { %>
                                        <tr>
                                            <td class="product-col">
                                                <div class="product">
                                                    <figure class="product-media">
                                                        <a>
                                                            <img src="/IMAGES/<%= product.productId.Inputimage[0].filename %>"
                                                                 alt="product image">
                                                        </a>
                                                    </figure>
                                                </div>
                                            </td>
                                            <td><%= product.productId.name %></td>
                                            
                                            <% if(product.productId.finalPrice) { %>
                                                <td class="price-col">₹<%= product.productId.finalPrice %></td>
                                            <% } else { %>
                                                <td class="price-col">₹<%= product.price %></td>
                                            <% } %>                                            
                                            <td class="quantity-col">
                                                <div class="product_count">
                                                    <span class="decrement-btn mx-1" onclick="decrementQuantity('<%= product.productId._id %>')">
                                                        <i class="down-arrow"></i>
                                                    </span>
                                                    <input class="input-number readonly-input" id="quantity_<%= product.productId._id %>" type="text"
                                                        value="<%= product.quantity %>" min="1" max="<%= product.productId.quantity %>"
                                                        data-product-id="<%= product.productId._id %>" readonly>
                                                    <span class="increment-btn mx-1" onclick="incrementQuantity('<%= product.productId._id %>')">
                                                        <i class="up-arrow"></i>
                                                    </span>
                                                </div>
                                            </td>
                                            <td class="total-col" data-product-id="<%= product.productId._id %>">₹<%= product.totalAmount %></td>
                                            <td class="remove-col">
                                                <button class="btn-remove" onclick="removeCart('<%= product.productId._id %>')">
                                                    <i class="icon-close"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="6">Your cart is empty.</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table><!-- End .table table-cart -->
                    </div><!-- End .col-lg-9 -->
                    <aside class="col-lg-3">
                        <div class="summary summary-cart">
                            <h3 class="summary-title">Cart Total</h3><!-- End .summary-title -->

                            <table class="table table-summary">
                                <tbody>
                                    <tr class="summary-total">
                                        <td>Total:</td>
                                        <td class="cart-total">₹<%= totalCartPrice %></td>
                                    </tr><!-- End .summary-total -->
                                </tbody>
                            </table><!-- End .table table-summary -->
                            <a href="#" class="btn btn-outline-primary-2 btn-order btn-block" onclick="checkout()">PROCEED TO CHECKOUT</a>
                        </div><!-- End .summary -->

                        <a href="/" class="btn btn-outline-dark-2 btn-block mb-3"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
                    </aside><!-- End .col-lg-3 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .cart -->
    </div><!-- End .page-content -->
</main><!-- End .main -->

<!--quantity update-->

<script>
    function removeCart(productId) {
        Swal.fire({
            title: 'Are you sure?',
            icon: 'question',
            text: 'You want to remove the product from the cart',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            timer: 2500,
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/removeCart?productId=${productId}`, { method: 'POST' })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Success',
                                icon: 'success',
                                text: 'Your product was removed from the cart'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                icon: 'error',
                                text: 'There was an error removing your product from the cart'
                            });
                        }
                    })
                    .catch(error => {
                        console.log('Fetch error:', error);
                        window.location.reload();
                    });
            }
        });
    }

    function checkout() {
        fetch('/checkoutStock', {
            method: 'POST'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/checkout';
            } else {
                Swal.fire({
                    title: data.message === 'your cart have no product' ? 'Empty Cart' : 'Stock out',
                    icon: 'info',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 2500,
                });
            }
        });
    }
</script>

<script>
    function incrementQuantity(productId) {
        const input = document.querySelector(`input[data-product-id='${productId}']`);
        const currentQuantity = parseInt(input.value);
        const maxQuantity = parseInt(input.getAttribute('max'));

        if (currentQuantity < maxQuantity) {
            const newQuantity = currentQuantity + 1;
            input.value = newQuantity;
            updateQuantityServer(productId, newQuantity);
            updateSubtotal(productId, newQuantity);
            updateCartTotal();
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Maximum Stock Exceeded',
                text: 'The requested quantity exceeds the available stock.',
                confirmButtonText: 'OK'
            });
        }
    }

    function decrementQuantity(productId) {
        const input = document.querySelector(`input[data-product-id='${productId}']`);
        const currentQuantity = parseInt(input.value);
        const minQuantity = parseInt(input.getAttribute('min'));

        if (currentQuantity > minQuantity) {
            const newQuantity = currentQuantity - 1;
            input.value = newQuantity;
            updateQuantityServer(productId, newQuantity);
            updateSubtotal(productId, newQuantity);
            updateCartTotal();
        }
    }

    function updateQuantityServer(productId, newQuantity) {
        fetch('/update-quantity', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, newQuantity }),
        })
        .then(response => response.json())
        .then(data => {
            updateUI(data);
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function updateSubtotal(productId, newQuantity) {
        const priceCol = document.querySelector(`td.price-col[data-product-id='${productId}']`);
        const price = parseFloat(priceCol.textContent.replace('₹', ''));
        const totalCol = document.querySelector(`td.total-col[data-product-id='${productId}']`);
        totalCol.textContent = `₹${(price * newQuantity).toFixed(2)}`;
    }

    function updateCartTotal() {
        const totalCols = document.querySelectorAll('.total-col');
        let cartTotal = 0;
        totalCols.forEach(totalCol => {
            const total = parseFloat(totalCol.textContent.replace('₹', ''));
            cartTotal += total;
        });
        const cartTotalElement = document.querySelector('.cart-total');
        cartTotalElement.textContent = `₹${cartTotal.toFixed(2)}`;
    }

    function updateUI(data) {
        const totalPriceElement = document.querySelector(`.total-col[data-product-id="${data.productId}"]`);
        const cartTotalElement = document.querySelector('.cart-total');

        if (totalPriceElement && cartTotalElement) {
            totalPriceElement.textContent = `₹${data.totalPrice}`;
            cartTotalElement.textContent = `₹${data.cartTotal}`;
        }
    }
</script>


<%- include('../layouts/footbar') %>
<%- include('../layouts/footer') %>